@model IndexModel

@using AzureHF.App_Code.Helpers
@using AzureHF.Models.Index

@{
    ViewBag.Title = "Home Page";
}

@section scripts
{
    <script type="text/javascript">

        var o;

        $(function () {
            localStorage.setItem("blobs", JSON.stringify(@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Blobs))));
            $('#downloadButton').attr("data-link", "");
        })

        $('#jstree').on('changed.jstree', function (e, data) {

            o = data.instance.get_node(data.selected[0], true).attr("data-nodeid");

            updateList(o);
            document.getElementById('hiddenDeleteNodeId').value = o;

        }).jstree();


        $("#selectable").selectable({
            selected: function (event, ui) {

                var path = $(ui.selected).attr("data-path");

                if ($('#downloadButton').attr("data-link") == "") {

                    $('#downloadButton').attr("data-link", $('#downloadButton').attr("href"));
                    $('#downloadButton').attr("data-link", $('#downloadButton').attr("data-link").replace("docname", path));


                } else {
                    $('#downloadButton').attr("data-link", $('#downloadButton').attr("data-link").replace(localStorage.getItem("lastSelected"), path));
                }

                $('#downloadButton').attr("href", $('#downloadButton').attr("data-link"));
                document.getElementById('hiddenDeleteName').value = path;
                localStorage.setItem("lastSelected", path);

            }

        });


        function updateList(id) {

            var blobs = JSON.parse(localStorage.getItem("blobs"))[id];

            var html = "";

            for (var i in blobs) {

                html += "<li class='ui-widget-content' data-path='" + blobs[i]['Path'] + "'>";
                html += blobs[i]["DisplayName"]
                html += "</li>";

            }

            $("#selectable").html(html);

        }

        var modal = document.getElementById('myModal');


        // Get the button that opens the modal
        var btn = document.getElementById("createBtn");

        if (btn != null) {
            // Get the <span> element that closes the modal
            var span = document.getElementsByClassName("close")[0];

            // When the user clicks the button, open the modal
            btn.onclick = function () {
                modal.style.display = "block";
            }

            // When the user clicks on <span> (x), close the modal
            span.onclick = function () {
                modal.style.display = "none";
            }

            // When the user clicks anywhere outside of the modal, close it
            window.onclick = function (event) {
                if (event.target == modal) {
                    modal.style.display = "none";
                }
            }
        }

        function getNodeIdCreate(event) {
            document.getElementById('hiddenFieldIdCreate').value = $(".jstree-clicked").parent().attr("data-nodeid");

        };

        function getNodeIdUpload(event) {
            document.getElementById('hiddenFieldIdUpload').value = $(".jstree-clicked").parent().attr("data-nodeid");

        };

        function getNodeIdDelete(event) {
            document.getElementById('hiddenFieldIdDelete').value = $(".jstree-clicked").parent().attr("data-nodeid");
            document.getElementById('hiddenFieldIdParentDelete').value = $(".jstree-clicked").closest("li").parents("li").attr("data-nodeid");
        };

    </script>

}


<div style="width: 35%; float:left; margin-top:20px ">

    @if (User.IsInRole(AzureHF.Authorization.Role.Admin))
    {
        <div style="display:inline-block">
            <button id="createBtn" style="float:left; margin-right: 5px" class="btn btn-info">Create</button>
            <div style="float:left">


                @using (Html.BeginForm("DeleteDirectory", "Home", FormMethod.Post, new { onsubmit = "return getNodeIdDelete(event);" }))
                {
                    @Html.HttpMethodOverride(HttpVerbs.Delete)

                    <input type="hidden" id="hiddenFieldIdDelete" name="nodeId" value="kkk" />
                    <input type="hidden" id="hiddenFieldIdParentDelete" name="parentNodeId" value="kkk" />

                    <button type="submit" class="btn btn-danger">Delete</button>

                }
            </div>
        </div>
    }
    else
    {
        <div style="display:inline-block; height: 34px; clear:both">
        </div>
    }



    <div id="jstree" style="display:block">
        @Html.CreateTree(Model.Root)
    </div>
</div>

<div style="width: 65%; height:100%; float:right; margin-top:20px; ">

    <div style="display:inline-block; width: 100%">

        @if (User.IsInRole(AzureHF.Authorization.Role.writer) || User.IsInRole(AzureHF.Authorization.Role.Admin))
        {
            <div style="float:left; margin-right: 5px">
                @using (Html.BeginForm("UploadFile", "Home", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return getNodeIdUpload(event);" }))
                {
                    <input type="hidden" id="hiddenFieldIdUpload" name="nodeId" value="kkk" />
                    <input type="submit" value="Upload" style="float:left; margin-right: 5px" class="btn btn-success" />
                    <input id="files" type="file" name="file" />
                }
            </div>
        }
        <div style="float:right; margin-right: 5px">

            @Html.ActionLink("Download", "DownloadFile", new { name = "docname" }, new { @id = "downloadButton", @class = "btn btn-primary", @style = "float:left; margin-right: 5px" })

        </div>
        @if (User.IsInRole(AzureHF.Authorization.Role.writer) || User.IsInRole(AzureHF.Authorization.Role.Admin))
        {
            <div style="float:right; margin-right: 5px">

                @using (Html.BeginForm("DeleteFile", "Home"))
                {
                    @Html.HttpMethodOverride(HttpVerbs.Delete)

                    <input type="hidden" id="hiddenDeleteName" name="name" value="kkk" />
                    <input type="hidden" id="hiddenDeleteNodeId" name="nodeId" value="kkk" />

                    <input type="submit" title="Delete" style="float:left" value="Delete" class="btn btn-danger" />
                }
            </div>
        }


    </div>

    <div style="display:block; border-left: 2px solid black">
        <ol id="selectable" onchange="selectionChanged(this)">

            @{
                List<BlobModel> blobModel;
                bool b = @Model.Blobs.TryGetValue(Model.Root.NodeId, out blobModel);
            }

            @foreach (var blob in blobModel)
            {
                <li class="ui-widget-content" data-blobpath="@blob.DisplayName">@blob.DisplayName</li>
            }
        </ol>
    </div>
</div>

@using (Html.BeginForm("AddDirectory", "Home", FormMethod.Post, new { onsubmit = "return getNodeIdCreate(event);" }))
{

    <fieldset>
        <!-- The Modal -->
        <div id="myModal" class="modal">

            <input type="hidden" id="hiddenFieldIdCreate" name="parentNodeId" value="kkk" />

            <!-- Modal content -->
            <div class="modal-content" style="width: 40%">

                <div class="modal-header">
                    <span class="close">×</span>
                    <h2 style="color:#d9e3cb">Mappa hozzáadása</h2>
                </div>
                <div class="modal-body">
                    <span>Mappa neve:</span>
                    <input type="text" name="name" />
                </div>
                <div class="modal-footer">
                    @*<h3>Modal Footer</h3>*@
                    <button type="submit">Add directory</button>
                </div>
            </div>
        </div>
    </fieldset>

}